{"version":3,"sources":["Store/store.js","Components/Movie.js","Components/MovieList.js","Components/Search.js","Components/Modal.js","Components/FavoriteElement.js","Components/FavoritesSidebar.js","Components/SidebarToggler.js","Components/Dimmer.js","App.js","index.js"],"names":["useStore","create","set","favoriteList","JSON","parse","localStorage","getItem","ratedMovies","searchValue","sidebarVisible","movieList","modalDetails","setSearchValue","value","setMovieList","list","setModalDetails","details","setSidebarVisible","addUserRating","rating","addToFavorites","movie","state","removeFromFavorites","imdbID","filter","Movie","props","Card","className","onClick","key","axios","get","then","response","data","catch","error","console","log","getMovieDetails","Container","Image","src","Poster","alt","wrapped","centered","Content","Header","Title","Description","Year","MovieList","map","Search","Input","size","onChange","event","target","placeholder","icon","Icon","name","inverted","circular","link","MovieModal","clearModalDetails","movieRating","Modal","onClose","open","image","class","Type","Genre","Director","Runtime","Plot","Ratings","style","marginBottom","Source","Value","Actions","Segment","Grid","columns","relaxed","Column","textAlign","Label","margin","type","min","max","newRating","userRating","ratedBefore","currentRatings","newState","Object","assign","Rating","maxRating","find","item","Button","color","Divider","vertical","FavoriteElement","Menu","Item","FavoritesSidebar","useEffect","length","Sidebar","as","animation","visible","SidebarToggler","sidebarVidisble","PageDim","Dimmer","active","onClickOutside","page","App","delayedRequest","useCallback","debounce","filteredMovies","cancel","setItem","stringify","basic","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAkCeA,E,MAhCEC,IAAO,SAACC,GAAD,MAAU,CAChCC,aAAcC,KAAKC,MAAMC,aAAaC,QAAQ,iBAAmB,MACjEC,YAAaJ,KAAKC,MAAMC,aAAaC,QAAQ,gBAAkB,MAE/DE,YAAa,GACbC,gBAAgB,EAChBC,UAAW,GACXC,aAAc,KAEdC,eAAgB,SAACC,GAAD,OAAWZ,EAAI,CAAEO,YAAaK,KAC9CC,aAAc,SAACC,GAAD,OAAUd,EAAI,CAAES,UAAWK,KACzCC,gBAAiB,SAACC,GAAD,OAAahB,EAAI,CAAEU,aAAcM,KAClDC,kBAAmB,SAACL,GAAD,OAAWZ,EAAI,CAAEQ,eAAgBI,KAEpDM,cAAe,SAACC,GACdnB,EAAI,CAAEM,YAAaa,KAGrBC,eAAgB,SAACC,GACfrB,GAAI,SAACsB,GAAD,MAAY,CACdrB,aAAa,CAAEoB,GAAH,mBAAaC,EAAMrB,oBAInCsB,oBAAqB,SAACC,GAAD,OACnBxB,GAAI,SAACsB,GAAD,MAAY,CACdrB,aAAcqB,EAAMrB,aAAawB,QAC/B,SAACJ,GAAD,OAAWA,EAAMG,SAAWA,c,kCCgBrBE,EAtCD,SAACC,GAAW,IAChBN,EAAUM,EAAVN,MACFN,EAAkBjB,GAAS,SAACwB,GAAD,OAAWA,EAAMP,mBAYlD,OACE,eAACa,EAAA,EAAD,CACEC,UAAU,gBACVC,QAAS,kBAbW,WACtB,IAAMC,EAAG,qCAAiCV,EAAMG,OAAvC,oBACTQ,IACGC,IAAIF,GACJG,MAAK,SAACC,GACLpB,EAAgBoB,EAASC,SAE1BC,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,MAMfG,CAAgBpB,EAAMG,SAFvC,UAIE,cAACkB,EAAA,EAAD,CAAWb,UAAU,8BAArB,SACE,cAACc,EAAA,EAAD,CACEC,IAAKvB,EAAMwB,OACXC,IAAG,qBACHC,SAAO,EACPlB,UAAU,oBACVmB,UAAQ,MAGZ,eAACpB,EAAA,EAAKqB,QAAN,WACE,cAACrB,EAAA,EAAKsB,OAAN,UAAc7B,EAAM8B,QACpB,cAACvB,EAAA,EAAKwB,YAAN,UACE,4BAAI/B,EAAMgC,gBChBLC,EAhBG,WAChB,IAAM7C,EAAYX,GAAS,SAACwB,GAAD,OAAWA,EAAMb,aAE5C,OACE,mCACGA,GACC,qBAAKoB,UAAU,iBAAf,SACGpB,EAAU8C,KAAI,SAAClC,GAAD,OACb,cAAC,EAAD,CAAOA,MAAOA,GAAYA,EAAMG,gB,iBCoB7BgC,EA5BA,WACb,IAAMjD,EAAcT,GAAS,SAACwB,GAAD,OAAWA,EAAMf,eACxCI,EAAiBb,GAAS,SAACwB,GAAD,OAAWA,EAAMX,kBAEjD,OACE,cAAC+B,EAAA,EAAD,CAAWb,UAAU,mBAArB,SACE,cAAC4B,EAAA,EAAD,CACE5B,UAAU,eACV6B,KAAK,MACL9C,MAAOL,EACPoD,SAAU,SAACC,GAAD,OAAWjD,EAAeiD,EAAMC,OAAOjD,QACjDkD,YAAY,wBACZC,KACExD,EACE,cAACyD,EAAA,EAAD,CACEC,KAAK,SACLC,UAAQ,EACRC,UAAQ,EACRC,MAAI,EACJtC,QAAS,kBAAMnB,EAAe,OAE9B,U,uEC0GC0D,EArHI,WACjB,IAAM3D,EAAeZ,GAAS,SAACwB,GAAD,OAAWA,EAAMZ,gBACzC4D,EAAoBxE,GAAS,SAACwB,GAAD,OAAWA,EAAMP,mBAE9Cd,EAAeH,GAAS,SAACwB,GAAD,OAAWA,EAAMrB,gBACzCmB,EAAiBtB,GAAS,SAACwB,GAAD,OAAWA,EAAMF,kBAC3CG,EAAsBzB,GAAS,SAACwB,GAAD,OAAWA,EAAMC,uBAEhDjB,EAAcR,GAAS,SAACwB,GAAD,OAAWA,EAAMhB,eACxCY,EAAgBpB,GAAS,SAACwB,GAAD,OAAWA,EAAMJ,iBAa1CqD,EAAc7D,EAAeJ,EAAYI,EAAac,QAAU,KAEtE,OACE,mCACGd,GACC,eAAC8D,EAAA,EAAD,CACEC,QAAS,kBAAMH,EAAkB,OACjCI,OAAMhE,EAFR,UAIE,eAAC8D,EAAA,EAAMvB,QAAP,CAAe0B,OAAK,EAApB,UACE,cAAChC,EAAA,EAAD,CAAOe,KAAK,MAAMd,IAAKlC,EAAamC,OAAQE,SAAO,IACnD,eAACyB,EAAA,EAAMpB,YAAP,WACE,eAACF,EAAA,EAAD,WACGxC,EAAayC,MADhB,IACwBzC,EAAa2C,KAAM,IACzC,qBAAKuB,MAAM,sBAAX,SAAkClE,EAAamE,UAEjD,8BACE,4CADF,IAC2BnE,EAAaoE,SACnC,IACL,8BACE,+CADF,IAC8BpE,EAAaqE,YAE3C,8BACE,8CADF,IAC6BrE,EAAasE,WAE1C,4BAAItE,EAAauE,OAChBvE,EAAawE,QACZ,iCACE,mBAAGC,MAAO,CAAEC,aAAc,IAA1B,wBAEA,KACH1E,EAAawE,QACVxE,EAAawE,QAAQ3B,KAAI,SAACpC,GAAD,OACvB,8BACE,mCAASA,EAAOkE,OAAhB,OADF,IACqClE,EAAOmE,YAG9C,WAGR,cAACd,EAAA,EAAMe,QAAP,UACE,eAACC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAMC,QAAS,EAAGC,QAAQ,OAAO3C,UAAQ,EAAzC,UACE,eAACyC,EAAA,EAAKG,OAAN,CAAa5C,UAAQ,EAAC6C,UAAU,SAAhC,UACE,cAACC,EAAA,EAAD,6CACA,oBAAGX,MAAO,CAAEY,OAAQ,SAApB,yBACe,IACZxB,GAEG,gDAEN,uBACEyB,KAAK,QACLC,IAAK,EACLC,IAAK,GACLtF,MAAO2D,GAA4B,EACnCZ,SApEY,SAACC,GAC7B,IAAMuC,EAAY,CAChB3E,OAAQd,EAAac,OACrB4E,WAAYxC,EAAMC,OAAOjD,MACzByF,aAAa,GAEXC,EAAiBhG,EACjBiG,EAAWC,OAAOC,OAAO,GAAIH,GACjCC,EAASJ,EAAU3E,QAAU2E,EAAUC,WACvClF,EAAcqF,MA6DA,uBACA,uBACA,cAACG,EAAA,EAAD,CACE3C,KAAK,OACL5C,OAAQoD,GAA4B,EACpCoC,UAAW,QAGf,cAAClB,EAAA,EAAKG,OAAN,CAAa5C,UAAQ,EAAC6C,UAAU,SAAhC,SACG5F,EAAa2G,MACZ,SAACC,GAAD,OAAUA,EAAKrF,SAAWd,EAAac,UAEvC,cAACsF,EAAA,EAAD,CACEhF,QAAS,kBAAMP,EAAoBb,EAAac,SAChDuF,MAAM,MAFR,mCAOA,cAACD,EAAA,EAAD,CACEhF,QAAS,kBAAMV,EAAeV,IAC9BqG,MAAM,OAFR,mCASN,cAACC,EAAA,EAAD,CAASC,UAAQ,e,SCjGhBC,EApBS,SAAC,GAAe,IAAb7F,EAAY,EAAZA,MACnBN,EAAkBjB,GAAS,SAACwB,GAAD,OAAWA,EAAMP,mBAYlD,OACE,eAACoG,EAAA,EAAKC,KAAN,CAAWtF,QAAS,kBAXE,WACtB,IAAMC,EAAG,qCAAiCV,EAAMG,OAAvC,oBACTQ,IACGC,IAAIF,GACJG,MAAK,SAACC,GACLpB,EAAgBoB,EAASC,SAE1BC,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,MAING,CAAgBpB,EAAMG,SAAhD,UACGH,EAAM8B,MADT,MACmB9B,EAAMgC,S,SCedgE,EA7BU,WACvB,IAAM7G,EAAiBV,GAAS,SAACwB,GAAD,OAAWA,EAAMd,kBAC3CP,EAAeH,GAAS,SAACwB,GAAD,OAAWA,EAAMrB,gBACzCgB,EAAoBnB,GAAS,SAACwB,GAAD,OAAWA,EAAML,qBAMpD,OAJAqG,qBAAU,WACoB,IAAxBrH,EAAasH,QAActG,GAAkB,KAChD,CAAChB,IAGF,mCACE,eAACuH,EAAA,EAAD,CACEC,GAAIN,IACJO,UAAU,UACVxD,UAAQ,EACR+C,UAAQ,EACRU,QAASnH,EALX,UAOE,uDACCP,EAAasH,OAAS,EACnBtH,EAAasD,KAAI,SAAClC,GAAD,OACf,cAAC,EAAD,CAAoCA,MAAOA,GAArBA,EAAMG,WAE9B,WCGGoG,EA5BQ,WACrB,IAAMC,EAAkB/H,GAAS,SAACwB,GAAD,OAAWA,EAAMd,kBAC5CS,EAAoBnB,GAAS,SAACwB,GAAD,OAAWA,EAAML,qBAEpD,OAAI4G,EAEA,cAACf,EAAA,EAAD,CACE5C,UAAQ,EACR6C,MAAM,OACNlF,UAAU,iBACVC,QAAS,kBAAMb,GAAkB,IAJnC,4BAWA,cAAC6F,EAAA,EAAD,CACE5C,UAAQ,EACR6C,MAAM,OACNlF,UAAU,iBACVC,QAAS,kBAAMb,GAAkB,IAJnC,6B,SCLS6G,EAZC,WACd,IAAMD,EAAkB/H,GAAS,SAACwB,GAAD,OAAWA,EAAMd,kBAC5CS,EAAoBnB,GAAS,SAACwB,GAAD,OAAWA,EAAML,qBAEpD,OACE,cAAC8G,EAAA,EAAD,CACEC,OAAQH,EACRI,eAAgB,kBAAMhH,GAAmB4G,IACzCK,MAAI,KCuDKC,G,OApDH,WACV,IAAM5H,EAAcT,GAAS,SAACwB,GAAD,OAAWA,EAAMf,eACxCE,EAAYX,GAAS,SAACwB,GAAD,OAAWA,EAAMb,aACtCI,EAAef,GAAS,SAACwB,GAAD,OAAWA,EAAMT,gBACzCZ,EAAeH,GAAS,SAACwB,GAAD,OAAWA,EAAMrB,gBACzCK,EAAcR,GAAS,SAACwB,GAAD,OAAWA,EAAMhB,eACxCyB,EAAG,qCAAiCxB,EAAjC,oBAcH6H,EAAiBC,sBAAYC,KAZd,WACnBtG,IACGC,IAAIF,GACJG,MAAK,SAACC,GACL,IAAIoG,EAAiBpG,EAASC,KAAKoB,OAAO/B,QACxC,SAACX,GAAD,MAAwB,SAAdA,EAAK+D,QAEjBhE,EAAa0H,MAEdlG,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,QAGwB,KAAM,CAAC/B,IAkBjE,OAhBA+G,qBAAU,WAKR,OAJAc,IACoB,KAAhB7H,GACFM,EAAa,MAERuH,EAAeI,SACrB,CAACjI,IAEJ+G,qBAAU,WACRlH,aAAaqI,QAAQ,eAAgBvI,KAAKwI,UAAUzI,MACnD,CAACA,IAEJqH,qBAAU,WACRlH,aAAaqI,QAAQ,cAAevI,KAAKwI,UAAUpI,MAClD,CAACA,IAGF,sBAAKuB,UAAU,MAAf,UACE,cAAC,EAAD,IACA,eAAC2D,EAAA,EAAD,CAASmD,OAAK,EAAd,UACE,cAAC,EAAD,IACClI,EAAY,cAAC,EAAD,IAAgB,KAC7B,cAAC,EAAD,IACCR,EAAasH,OAAS,cAAC,EAAD,IAAqB,QAE9C,cAAC,EAAD,SC5DNqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2fcd547a.chunk.js","sourcesContent":["import create from \"zustand\"\r\n\r\nconst useStore = create((set) => ({\r\n  favoriteList: JSON.parse(localStorage.getItem(\"favoriteList\") || \"[]\"),\r\n  ratedMovies: JSON.parse(localStorage.getItem(\"ratedMovies\") || \"{}\"),\r\n\r\n  searchValue: \"\",\r\n  sidebarVisible: false,\r\n  movieList: [],\r\n  modalDetails: null,\r\n\r\n  setSearchValue: (value) => set({ searchValue: value }),\r\n  setMovieList: (list) => set({ movieList: list }),\r\n  setModalDetails: (details) => set({ modalDetails: details }),\r\n  setSidebarVisible: (value) => set({ sidebarVisible: value }),\r\n\r\n  addUserRating: (rating) => {\r\n    set({ ratedMovies: rating })\r\n  },\r\n\r\n  addToFavorites: (movie) => {\r\n    set((state) => ({\r\n      favoriteList: [movie, ...state.favoriteList],\r\n    }))\r\n  },\r\n\r\n  removeFromFavorites: (imdbID) =>\r\n    set((state) => ({\r\n      favoriteList: state.favoriteList.filter(\r\n        (movie) => movie.imdbID !== imdbID\r\n      ),\r\n    })),\r\n}))\r\n\r\nexport default useStore\r\n","import React from \"react\"\r\nimport axios from \"axios\"\r\n\r\nimport useStore from \"../Store/store\"\r\n\r\nimport { Card, Image, Container } from \"semantic-ui-react\"\r\n\r\nconst Movie = (props) => {\r\n  const { movie } = props\r\n  const setModalDetails = useStore((state) => state.setModalDetails)\r\n\r\n  const getMovieDetails = () => {\r\n    const key = `https://www.omdbapi.com/?i=${movie.imdbID}&apikey=b46dc190`\r\n    axios\r\n      .get(key)\r\n      .then((response) => {\r\n        setModalDetails(response.data)\r\n      })\r\n      .catch((error) => console.log(error))\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      className=\"movie-element\"\r\n      onClick={() => getMovieDetails(movie.imdbID)}\r\n    >\r\n      <Container className=\"movie-element-img-container\">\r\n        <Image\r\n          src={movie.Poster}\r\n          alt={`poster unavailable`}\r\n          wrapped\r\n          className=\"movie-element-img\"\r\n          centered\r\n        />\r\n      </Container>\r\n      <Card.Content>\r\n        <Card.Header>{movie.Title}</Card.Header>\r\n        <Card.Description>\r\n          <p>{movie.Year}</p>\r\n        </Card.Description>\r\n      </Card.Content>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Movie\r\n","import React from \"react\"\r\n\r\nimport useStore from \"../Store/store\"\r\n\r\nimport Movie from \"./Movie\"\r\n\r\nconst MovieList = () => {\r\n  const movieList = useStore((state) => state.movieList)\r\n\r\n  return (\r\n    <>\r\n      {movieList && (\r\n        <div className=\"list-container\">\r\n          {movieList.map((movie) => (\r\n            <Movie movie={movie} key={movie.imdbID} />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MovieList\r\n","import React from \"react\"\r\n\r\nimport useStore from \"../Store/store\"\r\n\r\nimport { Input, Container, Icon } from \"semantic-ui-react\"\r\n\r\nconst Search = () => {\r\n  const searchValue = useStore((state) => state.searchValue)\r\n  const setSearchValue = useStore((state) => state.setSearchValue)\r\n\r\n  return (\r\n    <Container className=\"search-container\">\r\n      <Input\r\n        className=\"search-input\"\r\n        size=\"big\"\r\n        value={searchValue}\r\n        onChange={(event) => setSearchValue(event.target.value)}\r\n        placeholder=\"Search for a movie :)\"\r\n        icon={\r\n          searchValue ? (\r\n            <Icon\r\n              name=\"remove\"\r\n              inverted\r\n              circular\r\n              link\r\n              onClick={() => setSearchValue(\"\")}\r\n            />\r\n          ) : null\r\n        }\r\n      />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Search\r\n","import React from \"react\"\r\n\r\nimport useStore from \"../Store/store\"\r\n\r\nimport {\r\n  Button,\r\n  Header,\r\n  Image,\r\n  Modal,\r\n  Divider,\r\n  Grid,\r\n  Segment,\r\n  Label,\r\n  Rating,\r\n} from \"semantic-ui-react\"\r\n\r\nconst MovieModal = () => {\r\n  const modalDetails = useStore((state) => state.modalDetails)\r\n  const clearModalDetails = useStore((state) => state.setModalDetails)\r\n\r\n  const favoriteList = useStore((state) => state.favoriteList)\r\n  const addToFavorites = useStore((state) => state.addToFavorites)\r\n  const removeFromFavorites = useStore((state) => state.removeFromFavorites)\r\n\r\n  const ratedMovies = useStore((state) => state.ratedMovies)\r\n  const addUserRating = useStore((state) => state.addUserRating)\r\n  const changeUserMovieRating = (event) => {\r\n    const newRating = {\r\n      imdbID: modalDetails.imdbID,\r\n      userRating: event.target.value,\r\n      ratedBefore: true,\r\n    }\r\n    let currentRatings = ratedMovies\r\n    let newState = Object.assign({}, currentRatings)\r\n    newState[newRating.imdbID] = newRating.userRating\r\n    addUserRating(newState)\r\n  }\r\n\r\n  const movieRating = modalDetails ? ratedMovies[modalDetails.imdbID] : null\r\n\r\n  return (\r\n    <>\r\n      {modalDetails && (\r\n        <Modal\r\n          onClose={() => clearModalDetails(null)}\r\n          open={modalDetails ? true : false}\r\n        >\r\n          <Modal.Content image>\r\n            <Image size=\"big\" src={modalDetails.Poster} wrapped />\r\n            <Modal.Description>\r\n              <Header>\r\n                {modalDetails.Title} {modalDetails.Year}{\" \"}\r\n                <div class=\"ui horizontal label\">{modalDetails.Type}</div>\r\n              </Header>\r\n              <p>\r\n                <strong>Genre:</strong> {modalDetails.Genre}\r\n              </p>{\" \"}\r\n              <p>\r\n                <strong>Director:</strong> {modalDetails.Director}\r\n              </p>\r\n              <p>\r\n                <strong>Runtime:</strong> {modalDetails.Runtime}\r\n              </p>\r\n              <p>{modalDetails.Plot}</p>\r\n              {modalDetails.Ratings ? (\r\n                <strong>\r\n                  <p style={{ marginBottom: 10 }}>Ratings:</p>\r\n                </strong>\r\n              ) : null}\r\n              {modalDetails.Ratings\r\n                ? modalDetails.Ratings.map((rating) => (\r\n                    <p>\r\n                      <strong>{rating.Source}:</strong> {rating.Value}\r\n                    </p>\r\n                  ))\r\n                : null}\r\n            </Modal.Description>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Segment>\r\n              <Grid columns={2} relaxed=\"very\" centered>\r\n                <Grid.Column centered textAlign=\"center\">\r\n                  <Label>How would you rate this movie?</Label>\r\n                  <p style={{ margin: \"7px 0\" }}>\r\n                    Your rating:{\" \"}\r\n                    {movieRating\r\n                      ? movieRating\r\n                      : \"You haven't rated it yet. Did you like it?\"}\r\n                  </p>\r\n                  <input\r\n                    type=\"range\"\r\n                    min={0}\r\n                    max={10}\r\n                    value={movieRating ? movieRating : 0}\r\n                    onChange={changeUserMovieRating}\r\n                  />\r\n                  <br />\r\n                  <br />\r\n                  <Rating\r\n                    icon=\"star\"\r\n                    rating={movieRating ? movieRating : 0}\r\n                    maxRating={10}\r\n                  />\r\n                </Grid.Column>\r\n                <Grid.Column centered textAlign=\"center\">\r\n                  {favoriteList.find(\r\n                    (item) => item.imdbID === modalDetails.imdbID\r\n                  ) ? (\r\n                    <Button\r\n                      onClick={() => removeFromFavorites(modalDetails.imdbID)}\r\n                      color=\"red\"\r\n                    >\r\n                      Remove from favorites\r\n                    </Button>\r\n                  ) : (\r\n                    <Button\r\n                      onClick={() => addToFavorites(modalDetails)}\r\n                      color=\"blue\"\r\n                    >\r\n                      Add to favorites\r\n                    </Button>\r\n                  )}\r\n                </Grid.Column>\r\n              </Grid>\r\n              <Divider vertical />\r\n            </Segment>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MovieModal\r\n","import React from \"react\"\r\nimport axios from \"axios\"\r\n\r\nimport useStore from \"../Store/store\"\r\n\r\nimport { Menu } from \"semantic-ui-react\"\r\n\r\nconst FavoriteElement = ({ movie }) => {\r\n  const setModalDetails = useStore((state) => state.setModalDetails)\r\n\r\n  const getMovieDetails = () => {\r\n    const key = `https://www.omdbapi.com/?i=${movie.imdbID}&apikey=b46dc190`\r\n    axios\r\n      .get(key)\r\n      .then((response) => {\r\n        setModalDetails(response.data)\r\n      })\r\n      .catch((error) => console.log(error))\r\n  }\r\n\r\n  return (\r\n    <Menu.Item onClick={() => getMovieDetails(movie.imdbID)}>\r\n      {movie.Title} - {movie.Year}\r\n    </Menu.Item>\r\n  )\r\n}\r\n\r\nexport default FavoriteElement\r\n","import React, { useEffect } from \"react\"\r\n\r\nimport useStore from \"../Store/store\"\r\n\r\nimport FavoriteElement from \"./FavoriteElement\"\r\n\r\nimport { Sidebar, Menu } from \"semantic-ui-react\"\r\n\r\nconst FavoritesSidebar = () => {\r\n  const sidebarVisible = useStore((state) => state.sidebarVisible)\r\n  const favoriteList = useStore((state) => state.favoriteList)\r\n  const setSidebarVisible = useStore((state) => state.setSidebarVisible)\r\n\r\n  useEffect(() => {\r\n    if (favoriteList.length === 0) setSidebarVisible(false)\r\n  }, [favoriteList])\r\n\r\n  return (\r\n    <>\r\n      <Sidebar\r\n        as={Menu}\r\n        animation=\"overlay\"\r\n        inverted\r\n        vertical\r\n        visible={sidebarVisible}\r\n      >\r\n        <h3>Your favorite movies!</h3>\r\n        {favoriteList.length > 0\r\n          ? favoriteList.map((movie) => (\r\n              <FavoriteElement key={movie.imdbID} movie={movie} />\r\n            ))\r\n          : null}\r\n      </Sidebar>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default FavoritesSidebar\r\n","import React from \"react\"\r\n\r\nimport useStore from \"../Store/store\"\r\n\r\nimport { Button } from \"semantic-ui-react\"\r\n\r\nconst SidebarToggler = () => {\r\n  const sidebarVidisble = useStore((state) => state.sidebarVisible)\r\n  const setSidebarVisible = useStore((state) => state.setSidebarVisible)\r\n\r\n  if (sidebarVidisble) {\r\n    return (\r\n      <Button\r\n        inverted\r\n        color=\"grey\"\r\n        className=\"sidebar-toggle\"\r\n        onClick={() => setSidebarVisible(false)}\r\n      >\r\n        Hide favorites\r\n      </Button>\r\n    )\r\n  } else\r\n    return (\r\n      <Button\r\n        inverted\r\n        color=\"grey\"\r\n        className=\"sidebar-toggle\"\r\n        onClick={() => setSidebarVisible(true)}\r\n      >\r\n        Show favorites\r\n      </Button>\r\n    )\r\n}\r\n\r\nexport default SidebarToggler\r\n","import React from \"react\"\r\n\r\nimport useStore from \"../Store/store\"\r\n\r\nimport { Dimmer } from \"semantic-ui-react\"\r\n\r\nconst PageDim = () => {\r\n  const sidebarVidisble = useStore((state) => state.sidebarVisible)\r\n  const setSidebarVisible = useStore((state) => state.setSidebarVisible)\r\n\r\n  return (\r\n    <Dimmer\r\n      active={sidebarVidisble}\r\n      onClickOutside={() => setSidebarVisible(!sidebarVidisble)}\r\n      page\r\n    />\r\n  )\r\n}\r\nexport default PageDim\r\n","import axios from \"axios\"\nimport React, { useCallback, useEffect } from \"react\"\nimport debounce from \"lodash.debounce\"\n\nimport useStore from \"./Store/store\"\n\nimport MovieList from \"./Components/MovieList\"\nimport Search from \"./Components/Search\"\nimport MovieModal from \"./Components/Modal\"\nimport FavoritesSidebar from \"./Components/FavoritesSidebar\"\nimport SidebarToggler from \"./Components/SidebarToggler\"\nimport PageDim from \"./Components/Dimmer\"\n\nimport { Segment } from \"semantic-ui-react\"\n\nimport \"./Style/style.scss\"\n\nconst App = () => {\n  const searchValue = useStore((state) => state.searchValue)\n  const movieList = useStore((state) => state.movieList)\n  const setMovieList = useStore((state) => state.setMovieList)\n  const favoriteList = useStore((state) => state.favoriteList)\n  const ratedMovies = useStore((state) => state.ratedMovies)\n  const key = `https://www.omdbapi.com/?s=${searchValue}&apikey=b46dc190`\n\n  const movieRequest = () => {\n    axios\n      .get(key)\n      .then((response) => {\n        let filteredMovies = response.data.Search.filter(\n          (list) => list.Type !== \"game\"\n        )\n        setMovieList(filteredMovies)\n      })\n      .catch((error) => console.log(error))\n  }\n\n  const delayedRequest = useCallback(debounce(movieRequest, 500), [searchValue])\n\n  useEffect(() => {\n    delayedRequest()\n    if (searchValue === \"\") {\n      setMovieList(null)\n    }\n    return delayedRequest.cancel\n  }, [searchValue])\n\n  useEffect(() => {\n    localStorage.setItem(\"favoriteList\", JSON.stringify(favoriteList))\n  }, [favoriteList])\n\n  useEffect(() => {\n    localStorage.setItem(\"ratedMovies\", JSON.stringify(ratedMovies))\n  }, [ratedMovies])\n\n  return (\n    <div className=\"App\">\n      <FavoritesSidebar />\n      <Segment basic>\n        <Search />\n        {movieList ? <MovieList /> : null}\n        <MovieModal />\n        {favoriteList.length ? <SidebarToggler /> : null}\n      </Segment>\n      <PageDim />\n    </div>\n  )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}