{"version":3,"sources":["enums/SearchItemTypes.ts","Store/store.ts","Components/Movie.tsx","Components/MovieList.tsx","Components/Search.tsx","Components/Modal.tsx","Components/FavoriteElement.tsx","Components/FavoritesSidebar.tsx","Components/SidebarToggler.tsx","Components/Dimmer.tsx","App.tsx","index.tsx"],"names":["SearchItemTypes","storageFavorites","JSON","parse","localStorage","getItem","storageRatesMovies","useStore","create","set","favoriteList","ratedMovies","searchValue","sidebarVisible","movieList","modalDetails","setSearchValue","value","setMovieList","list","setModalDetails","details","setSidebarVisible","addUserRating","rating","addToFavorites","movie","state","removeFromFavorites","imdbID","filter","Movie","Card","className","onClick","key","axios","get","then","response","data","catch","error","console","log","getMovieDetails","Container","Image","src","Poster","alt","wrapped","centered","Content","Header","Title","Description","Year","MovieList","map","Search","Input","size","onChange","event","target","placeholder","icon","Icon","name","inverted","circular","link","MovieModal","clearModalDetails","movieRating","Modal","onClose","open","image","Type","Genre","Director","Runtime","Plot","Ratings","style","marginBottom","Source","Value","Actions","Segment","Grid","columns","relaxed","Column","textAlign","Label","margin","type","min","max","newRating","userRating","Number","currentTarget","ratedBefore","currentRatings","newState","Object","assign","Rating","maxRating","find","item","Button","color","Divider","vertical","FavoriteElement","Menu","Item","window","innerWidth","FavoritesSidebar","useEffect","length","Sidebar","as","animation","visible","SidebarToggler","sidebarVidisble","PageDim","Dimmer","active","onClickOutside","page","App","delayedRequest","useCallback","debounce","filteredMovies","Game","cancel","setItem","stringify","basic","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d71c7aaf.chunk.js","sourcesContent":["export enum SearchItemTypes {\n  Game = \"game\",\n  Movie = \"movie\",\n  Series = \"series\",\n}\n","import create from \"zustand\"\nimport { MovieDetails } from \"../types/MovieDetails\"\n\nexport interface MovieBrowserStoreState {\n  favoriteList: MovieDetails[]\n  ratedMovies: Record<string, number>\n  searchValue: string\n  sidebarVisible: boolean\n  movieList: MovieDetails[]\n  modalDetails: MovieDetails | null\n\n  setSearchValue: (value: string) => void\n  setMovieList: (list: any[]) => void\n  setModalDetails: (details: MovieDetails | null) => void\n  setSidebarVisible: (value: boolean) => void\n  addUserRating: (rating: Record<string, number>) => void\n  addToFavorites: (movie: MovieDetails) => void\n  removeFromFavorites: (imdbID: string) => void\n}\n\nconst storageFavorites = JSON.parse(\n  localStorage.getItem(\"favoriteList\") || \"[]\"\n)\nconst storageRatesMovies = JSON.parse(\n  localStorage.getItem(\"ratedMovies\") || \"{}\"\n)\n\nconst useStore = create<MovieBrowserStoreState>((set) => ({\n  favoriteList: storageFavorites,\n  ratedMovies: storageRatesMovies,\n  searchValue: \"\",\n  sidebarVisible: false,\n  movieList: [],\n  modalDetails: null,\n\n  setSearchValue: (value: string) => set({ searchValue: value }),\n  setMovieList: (list: any[]) => set({ movieList: list }),\n  setModalDetails: (details: MovieDetails | null) =>\n    set({ modalDetails: details }),\n  setSidebarVisible: (value: boolean) => set({ sidebarVisible: value }),\n\n  addUserRating: (rating: Record<string, number>) => {\n    set({ ratedMovies: rating })\n  },\n\n  addToFavorites: (movie: MovieDetails) => {\n    set((state: MovieBrowserStoreState) => ({\n      favoriteList: [movie, ...state.favoriteList],\n    }))\n  },\n\n  removeFromFavorites: (imdbID: string) =>\n    set((state: MovieBrowserStoreState) => ({\n      favoriteList: state.favoriteList.filter(\n        (movie) => movie.imdbID !== imdbID\n      ),\n    })),\n}))\n\nexport default useStore\n","import React from \"react\"\nimport axios from \"axios\"\n\nimport useStore from \"../Store/store\"\n\nimport { MovieDetails } from \".././types/MovieDetails\"\n\nimport { Card, Image, Container } from \"semantic-ui-react\"\n\ninterface MovieProps {\n  movie: MovieDetails\n}\n\nconst Movie = ({ movie }: MovieProps) => {\n  const setModalDetails = useStore((state) => state.setModalDetails)\n\n  const getMovieDetails = () => {\n    const key = `https://www.omdbapi.com/?i=${movie.imdbID}&apikey=b46dc190`\n    axios\n      .get(key)\n      .then((response) => {\n        setModalDetails(response.data)\n      })\n      .catch((error) => console.log(error))\n  }\n\n  return (\n    <Card className=\"movie-element\" onClick={() => getMovieDetails()}>\n      <Container className=\"movie-element-img-container\">\n        <Image\n          src={movie.Poster}\n          alt={`poster unavailable`}\n          wrapped\n          className=\"movie-element-img\"\n          centered\n        />\n      </Container>\n      <Card.Content>\n        <Card.Header>{movie.Title}</Card.Header>\n        <Card.Description>\n          <p>{movie.Year}</p>\n        </Card.Description>\n      </Card.Content>\n    </Card>\n  )\n}\n\nexport default Movie\n","import React from \"react\"\n\nimport useStore from \"../Store/store\"\n\nimport Movie from \"./Movie\"\n\nconst MovieList = () => {\n  const movieList = useStore((state) => state.movieList)\n\n  return (\n    <>\n      {movieList && (\n        <div className=\"list-container\">\n          {movieList.map((movie) => (\n            <Movie movie={movie} key={movie.imdbID} />\n          ))}\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default MovieList\n","import React from \"react\"\n\nimport useStore from \"../Store/store\"\n\nimport { Input, Container, Icon } from \"semantic-ui-react\"\n\nconst Search = () => {\n  const searchValue = useStore((state) => state.searchValue)\n  const setSearchValue = useStore((state) => state.setSearchValue)\n\n  return (\n    <Container className=\"search-container\">\n      <Input\n        className=\"search-input\"\n        size=\"big\"\n        value={searchValue}\n        onChange={(event) => setSearchValue(event.target.value)}\n        placeholder=\"Search for a movie :)\"\n        icon={\n          searchValue ? (\n            <Icon\n              name=\"remove\"\n              inverted\n              circular\n              link\n              onClick={() => setSearchValue(\"\")}\n            />\n          ) : null\n        }\n      />\n    </Container>\n  )\n}\n\nexport default Search\n","import React from \"react\"\n\nimport useStore from \"../Store/store\"\n\nimport {\n  Button,\n  Header,\n  Image,\n  Modal,\n  Divider,\n  Grid,\n  Segment,\n  Label,\n  Rating,\n} from \"semantic-ui-react\"\n\nconst MovieModal = () => {\n  const modalDetails = useStore((state) => state.modalDetails)\n  const clearModalDetails = useStore((state) => state.setModalDetails)\n\n  const favoriteList = useStore((state) => state.favoriteList)\n  const addToFavorites = useStore((state) => state.addToFavorites)\n  const removeFromFavorites = useStore((state) => state.removeFromFavorites)\n\n  const ratedMovies = useStore((state) => state.ratedMovies)\n  const addUserRating = useStore((state) => state.addUserRating)\n  const changeUserMovieRating = (event: React.FormEvent<HTMLInputElement>) => {\n    // const changeUserMovieRating = (event) => {\n    const newRating = {\n      imdbID: modalDetails?.imdbID,\n      userRating: Number(event.currentTarget.value),\n      // userRating: event.target.value,\n      ratedBefore: true,\n    }\n    let currentRatings = ratedMovies\n    let newState = Object.assign({}, currentRatings)\n    if (newRating.imdbID) newState[newRating.imdbID] = newRating.userRating\n    addUserRating(newState)\n  }\n\n  const movieRating = modalDetails ? ratedMovies[modalDetails.imdbID] : null\n\n  return (\n    <>\n      {modalDetails && (\n        <Modal\n          onClose={() => clearModalDetails(null)}\n          open={modalDetails ? true : false}\n        >\n          <Modal.Content image>\n            <Image size=\"big\" src={modalDetails.Poster} wrapped />\n            <Modal.Description>\n              <Header>\n                {modalDetails.Title} {modalDetails.Year}{\" \"}\n                <div className=\"ui horizontal label\">{modalDetails.Type}</div>\n              </Header>\n              <p>\n                <strong>Genre:</strong> {modalDetails.Genre}\n              </p>{\" \"}\n              <p>\n                <strong>Director:</strong> {modalDetails.Director}\n              </p>\n              <p>\n                <strong>Runtime:</strong> {modalDetails.Runtime}\n              </p>\n              <p>{modalDetails.Plot}</p>\n              {modalDetails.Ratings ? (\n                <strong>\n                  <p style={{ marginBottom: 10 }}>Ratings:</p>\n                </strong>\n              ) : null}\n              {modalDetails.Ratings\n                ? modalDetails.Ratings.map((rating) => (\n                    <p>\n                      <strong>{rating.Source}:</strong> {rating.Value}\n                    </p>\n                  ))\n                : null}\n            </Modal.Description>\n          </Modal.Content>\n          <Modal.Actions>\n            <Segment>\n              <Grid columns={2} relaxed=\"very\" centered>\n                <Grid.Column centered textAlign=\"center\">\n                  <Label>How would you rate this movie?</Label>\n                  <p style={{ margin: \"7px 0\" }}>\n                    Your rating:{\" \"}\n                    {movieRating\n                      ? movieRating\n                      : \"You haven't rated it yet. Did you like it?\"}\n                  </p>\n                  <input\n                    type=\"range\"\n                    min={0}\n                    max={10}\n                    value={movieRating ? movieRating : 0}\n                    onChange={changeUserMovieRating}\n                  />\n                  <br />\n                  <br />\n                  <Rating\n                    className=\"star-rating\"\n                    icon=\"star\"\n                    rating={movieRating ? movieRating : 0}\n                    maxRating={10}\n                  />\n                </Grid.Column>\n                <Grid.Column centered textAlign=\"center\">\n                  {favoriteList.find(\n                    (item) => item.imdbID === modalDetails.imdbID\n                  ) ? (\n                    <Button\n                      onClick={() => removeFromFavorites(modalDetails.imdbID)}\n                      color=\"red\"\n                    >\n                      Remove from favorites\n                    </Button>\n                  ) : (\n                    <Button\n                      onClick={() => addToFavorites(modalDetails)}\n                      color=\"blue\"\n                    >\n                      Add to favorites\n                    </Button>\n                  )}\n                </Grid.Column>\n              </Grid>\n              <Divider vertical />\n            </Segment>\n          </Modal.Actions>\n        </Modal>\n      )}\n    </>\n  )\n}\n\nexport default MovieModal\n","import React from \"react\"\nimport axios from \"axios\"\n\nimport useStore from \"../Store/store\"\n\nimport { MovieDetails } from \".././types/MovieDetails\"\n\nimport { Menu } from \"semantic-ui-react\"\n\ninterface MovieProps {\n  movie: MovieDetails\n}\n\nconst FavoriteElement = ({ movie }: MovieProps) => {\n  const setModalDetails = useStore((state) => state.setModalDetails)\n  const setSidebarVisible = useStore((state) => state.setSidebarVisible)\n\n  const getMovieDetails = () => {\n    const key = `https://www.omdbapi.com/?i=${movie.imdbID}&apikey=b46dc190`\n    axios\n      .get(key)\n      .then((response) => {\n        setModalDetails(response.data)\n        if (window.innerWidth < 1440) setSidebarVisible(false)\n        else return\n      })\n      .catch((error) => console.log(error))\n  }\n\n  return (\n    <Menu.Item onClick={() => getMovieDetails()}>\n      {movie.Title} - {movie.Year}\n    </Menu.Item>\n  )\n}\n\nexport default FavoriteElement\n","import React, { useEffect } from \"react\"\n\nimport useStore from \"../Store/store\"\n\nimport FavoriteElement from \"./FavoriteElement\"\n\nimport { Sidebar, Menu } from \"semantic-ui-react\"\n\nconst FavoritesSidebar = () => {\n  const sidebarVisible = useStore((state) => state.sidebarVisible)\n  const favoriteList = useStore((state) => state.favoriteList)\n  const setSidebarVisible = useStore((state) => state.setSidebarVisible)\n\n  useEffect(() => {\n    if (favoriteList.length === 0) setSidebarVisible(false)\n  }, [favoriteList])\n\n  return (\n    <>\n      <Sidebar\n        as={Menu}\n        animation=\"overlay\"\n        inverted\n        vertical\n        visible={sidebarVisible}\n      >\n        <h3>Your favorite movies!</h3>\n        {favoriteList.length > 0\n          ? favoriteList.map((movie) => (\n              <FavoriteElement key={movie.imdbID} movie={movie} />\n            ))\n          : null}\n      </Sidebar>\n    </>\n  )\n}\n\nexport default FavoritesSidebar\n","import React from \"react\"\n\nimport useStore from \"../Store/store\"\n\nimport { Button } from \"semantic-ui-react\"\n\nconst SidebarToggler = () => {\n  const sidebarVidisble = useStore((state) => state.sidebarVisible)\n  const setSidebarVisible = useStore((state) => state.setSidebarVisible)\n\n  if (sidebarVidisble) {\n    return (\n      <Button\n        color=\"grey\"\n        className=\"sidebar-toggle\"\n        onClick={() => setSidebarVisible(false)}\n      >\n        Hide favorites\n      </Button>\n    )\n  } else\n    return (\n      <>\n        <Button\n          color=\"grey\"\n          className=\"sidebar-toggle\"\n          onClick={() => setSidebarVisible(true)}\n        >\n          Show favorites\n        </Button>\n        <Button\n          icon\n          color=\"grey\"\n          className=\"sidebar-toggle-sm\"\n          onClick={() => setSidebarVisible(true)}\n        >\n          <i className=\"star icon yellow\"></i>\n        </Button>\n      </>\n    )\n}\n\nexport default SidebarToggler\n","import React from \"react\"\n\nimport useStore from \"../Store/store\"\n\nimport { Dimmer } from \"semantic-ui-react\"\n\nconst PageDim = () => {\n  const sidebarVidisble = useStore((state) => state.sidebarVisible)\n  const setSidebarVisible = useStore((state) => state.setSidebarVisible)\n\n  return (\n    <Dimmer\n      active={sidebarVidisble}\n      onClickOutside={() => setSidebarVisible(!sidebarVidisble)}\n      page\n    />\n  )\n}\nexport default PageDim\n","import axios from \"axios\"\nimport React, { useCallback, useEffect } from \"react\"\nimport debounce from \"lodash.debounce\"\n\nimport useStore from \"./Store/store\"\n\nimport MovieList from \"./Components/MovieList\"\nimport Search from \"./Components/Search\"\nimport MovieModal from \"./Components/Modal\"\nimport FavoritesSidebar from \"./Components/FavoritesSidebar\"\nimport SidebarToggler from \"./Components/SidebarToggler\"\nimport PageDim from \"./Components/Dimmer\"\n\nimport { Segment } from \"semantic-ui-react\"\n\nimport \"./Style/style.scss\"\nimport { SearchItemTypes } from \"./enums/SearchItemTypes\"\nimport { MovieDetails } from \"./types/MovieDetails\"\n\nconst App = () => {\n  const searchValue = useStore((state) => state.searchValue)\n  const movieList = useStore((state) => state.movieList)\n  const setMovieList = useStore((state) => state.setMovieList)\n  const favoriteList = useStore((state) => state.favoriteList)\n  const ratedMovies = useStore((state) => state.ratedMovies)\n  const key = `https://www.omdbapi.com/?s=${searchValue}&apikey=b46dc190`\n\n  const movieRequest = () => {\n    axios\n      .get(key)\n      .then((response) => {\n        const filteredMovies: MovieDetails[] = response.data.Search.filter(\n          ({ Type }: MovieDetails) => Type !== SearchItemTypes.Game\n        )\n        setMovieList(filteredMovies)\n      })\n      .catch((error) => console.log(error))\n  }\n\n  const delayedRequest = useCallback(debounce(movieRequest, 500), [searchValue])\n\n  useEffect(() => {\n    delayedRequest()\n    if (searchValue === \"\") {\n      setMovieList([])\n    }\n    return delayedRequest.cancel\n  }, [searchValue])\n\n  useEffect(() => {\n    localStorage.setItem(\"favoriteList\", JSON.stringify(favoriteList))\n  }, [favoriteList])\n\n  useEffect(() => {\n    localStorage.setItem(\"ratedMovies\", JSON.stringify(ratedMovies))\n  }, [ratedMovies])\n\n  return (\n    <div className=\"App\">\n      <FavoritesSidebar />\n      <Segment basic className=\"app-container\">\n        <Search />\n      </Segment>\n      {movieList ? (\n        <Segment basic className=\"app-container\">\n          <MovieList />\n        </Segment>\n      ) : null}\n      <MovieModal />\n      {favoriteList.length ? (\n        <Segment basic>\n          <SidebarToggler />\n        </Segment>\n      ) : null}\n      <PageDim />\n    </div>\n  )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}